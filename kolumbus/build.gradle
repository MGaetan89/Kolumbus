apply plugin: 'jacoco'
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'kotlin-android'
apply plugin: 'realm-android'

group = 'com.github.MGaetan89'

android {
	compileSdkVersion rootProject.ext.compileSdkVersion
	buildToolsVersion rootProject.ext.buildToolsVersion
	resourcePrefix 'kolumbus_'

	defaultConfig {
		minSdkVersion rootProject.ext.minSdkVersion
		targetSdkVersion rootProject.ext.targetSdkVersion
		versionCode rootProject.ext.kolumbusVersionCode
		versionName rootProject.ext.kolumbusVersionName
		resConfigs rootProject.ext.supportedLocales
		vectorDrawables.useSupportLibrary = true
	}

	buildTypes {
		debug {
			testCoverageEnabled true
		}

		release {
			minifyEnabled false
		}
	}

	lintOptions {
		abortOnError false
	}

	sourceSets {
		main.java.srcDirs = ['src/main/kotlin']
		test.java.srcDirs = ['src/test/kotlin']
	}
}

// From https://github.com/nenick/android-gradle-template/blob/master/App/build.gradle
task jacocoTestReport(type: JacocoReport, dependsOn: ['test']) {
	group = 'Reporting'
	description = 'Generates Jacoco coverage reports: XML and HTML'
	//outputs.upToDateWhen { false }

	// use hidden configuration, for details look into JacocoPlugin.groovy
	jacocoClasspath = project.configurations['androidJacocoAnt']

	// exclude auto-generated classes and tests
	def fileFilter = [
			'**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
			'**/*Test*.*', 'android/**/*.*', '**/*$inlined$*.class'
	]
	def debugTree = fileTree(dir: "${project.buildDir}/intermediates/classes/debug", excludes: fileFilter)
	def mainSrc = ["${project.projectDir}/src/main/kotlin"]

	sourceDirectories = files(mainSrc)
	classDirectories = files([debugTree])
	executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec'])

	reports {
		csv {
			enabled = false
		}

		html {
			enabled = true
			destination = "${buildDir}/reports/jacoco"
		}

		xml {
			enabled = true
			destination = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
		}
	}
}

dependencies {
	compile("com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}") {
		exclude group: 'com.android.support', module: 'animated-vector-drawable'
	}
	compile "com.android.support:recyclerview-v7:${rootProject.ext.supportLibraryVersion}"
	compile "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlinVersion}"

	testCompile "junit:junit:${rootProject.ext.jUnitVersion}"
	testCompile "org.jetbrains.kotlin:kotlin-test-junit:${rootProject.ext.kotlinVersion}"
	testCompile "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
}

task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

artifacts {
	archives sourcesJar
}
